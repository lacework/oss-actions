on: workflow_call

jobs:
  get-versions:
    runs-on: ubuntu-latest
    outputs:
      version-list: ${{ toJSON(steps.*.outputs.version) }}
    steps:
      - name: Install tfenv
        shell: bash
        run: |
          git clone --depth=1 https://github.com/tfutils/tfenv.git tfenv

      - name: TerraformLatest-3
        id: tfl-3
        shell: bash
        run: |
          echo "version=$(tfenv/bin/tfenv list-remote | grep '1\.[0-9]\.0$' | sed -n '4p')" >> $GITHUB_OUTPUT
    
  run-tests:
    needs: get-versions
    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJson(needs.get-versions.outputs.version-list) }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::249446771485:role/tf-role-arc-generic
          aws-region: us-west-2

      - name: Install Lacework CLI
        shell: bash
        run: |
          curl https://raw.githubusercontent.com/lacework/go-sdk/main/cli/install.sh | bash
          lacework version
          jq -n \
          --arg ac "$LW_ACCOUNT" \
          --arg ke "$LW_API_KEY" \
          --arg se "$LW_API_SECRET" \
          --arg su "$LW_SUBACCOUNT" \
          '{keyId: $ke, secret: $se, subAccount: $su, account: ($ac + ".lacework.net")}' > creds.json
          lacework configure -j creds.json --noninteractive 
        env:
          LW_ACCOUNT: ${{ secrets.tf_lw_account }}
          LW_API_KEY: ${{ secrets.tf_lw_api_key }}
          LW_API_SECRET: ${{ secrets.tf_lw_api_secret }}
          LW_SUBACCOUNT: ${{ secrets.tf_lw_subaccount }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.version }}
          terraform_wrapper: false

      - name: Install tfsec
        shell: bash
        run: |
          curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
          tfsec --version

      - name: Test Terraform
        shell: bash
        run: |
          terraform version
          ./scripts/ci_tests.sh
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.tf_arm_subscription_id }}
          ARM_TENANT_ID: ${{ secrets.tf_arm_tenant_id }}
          ARM_CLIENT_ID: ${{ secrets.tf_arm_client_id }}
          ARM_CLIENT_SECRET: ${{ secrets.tf_arm_client_secret }}
          GOOGLE_PROJECT: ${{ secrets.tf_google_project }}
          GOOGLE_CREDENTIALS: ${{ secrets.tf_google_credentials }}
          OCI_PRIVATE_KEY: ${{ secrets.tf_oci_private_key }}
          TF_VAR_tenancy_ocid: ${{ secrets.tf_oci_id }}
          TF_VAR_fingerprint: ${{ secrets.tf_oci_fingerprint }}
          TF_VAR_user_ocid: ${{ secrets.tf_oci_user }}
          TF_VAR_region: ${{ secrets.tf_oci_region }}

