on: 
  workflow_call:
    inputs:
      tf-versions:
        type: string
        description: "List of Terraform versions to test"
        default: '["1.0.0", "1.4", "1.5"]'
      use-custom-aws-creds:
        type: boolean
        description: "Whether to use aws creds in secrets"
        default: false

jobs:
  run-tests:
    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJSON(inputs.tf-versions) }}  
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials using OIDC
        if: ${{ ! inputs.use-custom-aws-creds }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::249446771485:role/tf-role-arc-generic
          aws-region: us-west-2

      - name: Configure AWS Credentials using repo secrets
        if: ${{ inputs.use-custom-aws-creds }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Lacework CLI
        shell: bash
        run: |
          curl https://raw.githubusercontent.com/lacework/go-sdk/main/cli/install.sh | bash
          lacework version
          jq -n \
          --arg ac "$LW_ACCOUNT" \
          --arg ke "$LW_API_KEY" \
          --arg se "$LW_API_SECRET" \
          --arg su "$LW_SUBACCOUNT" \
          '{keyId: $ke, secret: $se, subAccount: $su, account: ($ac + ".lacework.net")}' > creds.json
          lacework configure -j creds.json --noninteractive
          lacework configure -p main-account -j creds.json --noninteractive
          lacework configure -p sub-account-1 -j creds.json --noninteractive
          lacework configure -p sub-account-2 -j creds.json --noninteractive
        env:
          LW_ACCOUNT: ${{ secrets.tf_lw_account }}
          LW_API_KEY: ${{ secrets.tf_lw_api_key }}
          LW_API_SECRET: ${{ secrets.tf_lw_api_secret }}
          LW_SUBACCOUNT: ${{ secrets.tf_lw_subaccount }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.version }}
          terraform_wrapper: false

      - name: Install tfsec
        shell: bash
        run: |
          curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
          tfsec --version

      - name: Test Terraform
        if: ${{ ! inputs.use-custom-aws-creds }}
        shell: bash
        run: |
          terraform version
          ./scripts/ci_tests.sh
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.tf_arm_subscription_id }}
          ARM_TENANT_ID: ${{ secrets.tf_arm_tenant_id }}
          ARM_CLIENT_ID: ${{ secrets.tf_arm_client_id }}
          ARM_CLIENT_SECRET: ${{ secrets.tf_arm_client_secret }}
          GOOGLE_PROJECT: ${{ secrets.tf_google_project }}
          GOOGLE_CREDENTIALS: ${{ secrets.tf_google_credentials }}
          OCI_PRIVATE_KEY: ${{ secrets.tf_oci_private_key }}
          TF_VAR_tenancy_ocid: ${{ secrets.tf_oci_id }}
          TF_VAR_fingerprint: ${{ secrets.tf_oci_fingerprint }}
          TF_VAR_user_ocid: ${{ secrets.tf_oci_user }}
          TF_VAR_region: ${{ secrets.tf_oci_region }}
          TF_VAR_organization_id: ${{ secrets.gcloud_org_id }}

  slack-notify:
    name: Slack Notify if Failed Tests
    needs: run-tests
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify Slack on Failure
        if: ${{ contains(needs.*.result, 'failure') }}
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "attachments": [
                {
                  "color": "#E92020",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "@oncall-growth-eng! There has been a failure that needs your attention. :rotating_light:\n*GitHub Workflow Failure <${{ github.server_url }}/${{ github.repository }}>*\n\n*Workflow Run*\n <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Workflow>"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.TF_SLACK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK



